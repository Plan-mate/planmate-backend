name: 🚀 Deploy Planmate Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: ⚙️ Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: 🏗️ Build JAR without tests
        run: ./gradlew clean bootJar -x test --no-daemon

      - name: 🔑 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: 🐳 Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🏷️ Set Docker tag
        run: echo "TAG=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

      - name: 🧱 Build and push Docker image
        env:
          ECR_REPOSITORY: ${{ steps.login-ecr.outputs.registry }}/planmate-backend
        run: |
          docker build -t $ECR_REPOSITORY:${{ env.TAG }} .
          docker push $ECR_REPOSITORY:${{ env.TAG }}
          docker tag $ECR_REPOSITORY:${{ env.TAG }} $ECR_REPOSITORY:latest
          docker push $ECR_REPOSITORY:latest
          echo "✅ Docker image pushed successfully."

      - name: 📤 Upload deploy, nginx, and compose
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "infra/deploy.sh,infra/nginx.conf,docker/docker-compose.yml"
          target: "/home/ubuntu/.gha_upload/"
          overwrite: true
          rm: true

      - name: 🚀 Move files into place & deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euo pipefail
            mkdir -p /home/ubuntu/planmate-backend/infra
            mkdir -p /home/ubuntu/planmate-backend/infra/certbot/conf
            mkdir -p /home/ubuntu/planmate-backend/infra/certbot/www

            echo "🔹 Place deploy.sh"
            install -m 755 /home/ubuntu/.gha_upload/infra/deploy.sh /home/ubuntu/planmate-backend/infra/deploy.sh

            echo "🔹 Place nginx.conf"
            install -m 644 /home/ubuntu/.gha_upload/infra/nginx.conf /home/ubuntu/planmate-backend/infra/nginx.conf

            echo "🔹 Place docker-compose.yml"
            install -m 644 /home/ubuntu/.gha_upload/docker/docker-compose.yml /home/ubuntu/planmate-backend/infra/docker-compose.yml

            echo "🧹 Clean staging"
            rm -rf /home/ubuntu/.gha_upload

            echo "🚀 Run deploy script"
            bash /home/ubuntu/planmate-backend/infra/deploy.sh ${{ env.TAG }}

            echo "✅ Deployment done"
